import scala.scalanative._
import scala.scalanative.native.Nat._

@native.link("types")
@native.extern
object types {
  type __u_char = native.CUnsignedChar
  type __u_short = native.CUnsignedShort
  type __u_int = native.CUnsignedInt
  type __u_long = native.CUnsignedLong
  type __int8_t = native.CSignedChar
  type __uint8_t = native.CUnsignedChar
  type __int16_t = native.CShort
  type __uint16_t = native.CUnsignedShort
  type __int32_t = native.CInt
  type __uint32_t = native.CUnsignedInt
  type __int64_t = native.CLong
  type __uint64_t = native.CUnsignedLong
  type __quad_t = native.CLong
  type __u_quad_t = native.CUnsignedLong
  type __dev_t = native.CUnsignedLong
  type __uid_t = native.CUnsignedInt
  type __gid_t = native.CUnsignedInt
  type __ino_t = native.CUnsignedLong
  type __ino64_t = native.CUnsignedLong
  type __mode_t = native.CUnsignedInt
  type __nlink_t = native.CUnsignedLong
  type __off_t = native.CLong
  type __off64_t = native.CLong
  type __pid_t = native.CInt
  type struct___fsid_t = native.CStruct1[native.CArray[native.CInt, _2]]
  type __fsid_t = struct___fsid_t
  type __clock_t = native.CLong
  type __rlim_t = native.CUnsignedLong
  type __rlim64_t = native.CUnsignedLong
  type __id_t = native.CUnsignedInt
  type __time_t = native.CLong
  type __useconds_t = native.CUnsignedInt
  type __suseconds_t = native.CLong
  type __daddr_t = native.CInt
  type __key_t = native.CInt
  type __clockid_t = native.CInt
  type __timer_t = native.Ptr[Byte]
  type __blksize_t = native.CLong
  type __blkcnt_t = native.CLong
  type __blkcnt64_t = native.CLong
  type __fsblkcnt_t = native.CUnsignedLong
  type __fsblkcnt64_t = native.CUnsignedLong
  type __fsfilcnt_t = native.CUnsignedLong
  type __fsfilcnt64_t = native.CUnsignedLong
  type __fsword_t = native.CLong
  type __ssize_t = native.CLong
  type __syscall_slong_t = native.CLong
  type __syscall_ulong_t = native.CUnsignedLong
  type __loff_t = __off64_t
  type __qaddr_t = native.Ptr[__quad_t]
  type __caddr_t = native.Ptr[native.CChar]
  type __intptr_t = native.CLong
  type __socklen_t = native.CUnsignedInt
  type u_char = __u_char
  type u_short = __u_short
  type u_int = __u_int
  type u_long = __u_long
  type quad_t = __quad_t
  type u_quad_t = __u_quad_t
  type fsid_t = __fsid_t
  type loff_t = __loff_t
  type ino_t = __ino_t
  type dev_t = __dev_t
  type gid_t = __gid_t
  type mode_t = __mode_t
  type nlink_t = __nlink_t
  type uid_t = __uid_t
  type off_t = __off_t
  type pid_t = __pid_t
  type id_t = __id_t
  type ssize_t = __ssize_t
  type daddr_t = __daddr_t
  type caddr_t = native.Ptr[native.CChar]
  type key_t = __key_t
  type clock_t = __clock_t
  type time_t = __time_t
  type clockid_t = __clockid_t
  type timer_t = native.Ptr[Byte]
  type size_t = native.CUnsignedLong
  type ulong = native.CUnsignedLong
  type ushort = native.CUnsignedShort
  type uint = native.CUnsignedInt
  type int8_t = native.CSignedChar
  type int16_t = native.CShort
  type int32_t = native.CInt
  type int64_t = native.CLong
  type u_int8_t = native.CUnsignedChar
  type u_int16_t = native.CUnsignedShort
  type u_int32_t = native.CUnsignedInt
  type u_int64_t = native.CUnsignedLong
  type register_t = native.CLong
  type __sig_atomic_t = native.CInt
  type struct___sigset_t = native.CStruct1[native.CArray[native.CUnsignedLong, Digit[_1, _6]]]
  type __sigset_t = struct___sigset_t
  type sigset_t = __sigset_t
  type struct_timespec = native.CStruct2[__time_t,__syscall_slong_t]
  type struct_timeval = native.CStruct2[__time_t,__suseconds_t]
  type suseconds_t = __suseconds_t
  type __fd_mask = native.CLong
  type struct_fd_set = native.CStruct1[native.CArray[__fd_mask, Digit[_1, _6]]]
  type fd_set = struct_fd_set
  type fd_mask = __fd_mask
  def select(__nfds: native.CInt, __readfds: native.Ptr[fd_set], __writefds: native.Ptr[fd_set], __exceptfds: native.Ptr[fd_set], __timeout: native.Ptr[struct_timeval]): native.CInt = native.extern
  def pselect(__nfds: native.CInt, __readfds: native.Ptr[fd_set], __writefds: native.Ptr[fd_set], __exceptfds: native.Ptr[fd_set], __timeout: native.Ptr[struct_timespec], __sigmask: native.Ptr[__sigset_t]): native.CInt = native.extern
  def gnu_dev_major(__dev: native.CUnsignedLongLong): native.CUnsignedInt = native.extern
  def gnu_dev_minor(__dev: native.CUnsignedLongLong): native.CUnsignedInt = native.extern
  def gnu_dev_makedev(__major: native.CUnsignedInt, __minor: native.CUnsignedInt): native.CUnsignedLongLong = native.extern
  type blksize_t = __blksize_t
  type blkcnt_t = __blkcnt_t
  type fsblkcnt_t = __fsblkcnt_t
  type fsfilcnt_t = __fsfilcnt_t
  type pthread_t = native.CUnsignedLong
  type union_pthread_attr_t = native.CArray[Byte, Digit[_4, Digit[_4, _8]]]
  type pthread_attr_t = union_pthread_attr_t
  type struct___pthread_internal_list = native.CStruct2[native.Ptr[native.CArray[Byte, Digit[_1, Digit[_2, _8]]]], native.Ptr[native.CArray[Byte, Digit[_1, Digit[_2, _8]]]]]
  type __pthread_list_t = struct___pthread_internal_list
  type union_pthread_mutex_t = native.CArray[Byte, Digit[_3, Digit[_2, _0]]]
  type struct___pthread_mutex_s = native.CStruct8[native.CInt,native.CUnsignedInt,native.CInt,native.CUnsignedInt,native.CInt,native.CShort,native.CShort,__pthread_list_t]
  type pthread_mutex_t = union_pthread_mutex_t
  type union_pthread_mutexattr_t = native.CArray[Byte, Digit[_3, _2]]
  type pthread_mutexattr_t = union_pthread_mutexattr_t
  type union_pthread_cond_t = native.CArray[Byte, Digit[_3, Digit[_8, _4]]]
  type pthread_cond_t = union_pthread_cond_t
  type union_pthread_condattr_t = native.CArray[Byte, Digit[_3, _2]]
  type pthread_condattr_t = union_pthread_condattr_t
  type pthread_key_t = native.CUnsignedInt
  type pthread_once_t = native.CInt
  type union_pthread_rwlock_t = native.CArray[Byte, Digit[_4, Digit[_4, _8]]]
  type pthread_rwlock_t = union_pthread_rwlock_t
  type union_pthread_rwlockattr_t = native.CArray[Byte, Digit[_6, _4]]
  type pthread_rwlockattr_t = union_pthread_rwlockattr_t
  type pthread_spinlock_t = native.CInt
  type union_pthread_barrier_t = native.CArray[Byte, Digit[_2, Digit[_5, _6]]]
  type pthread_barrier_t = union_pthread_barrier_t
  type union_pthread_barrierattr_t = native.CArray[Byte, Digit[_3, _2]]
  type pthread_barrierattr_t = union_pthread_barrierattr_t
}
